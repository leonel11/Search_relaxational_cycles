<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="parser_8cpp" kind="file" language="C++">
    <compoundname>parser.cpp</compoundname>
    <includes refid="parser_8h" local="yes">parser.h</includes>
    <incdepgraph>
      <node id="227">
        <label>iomanip</label>
      </node>
      <node id="223">
        <label>windows.h</label>
      </node>
      <node id="220">
        <label>stdlib.h</label>
      </node>
      <node id="218">
        <label>arithmetic.h</label>
        <link refid="arithmetic_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>string</label>
      </node>
      <node id="217">
        <label>operations.h</label>
        <link refid="operations_8h"/>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>omp.h</label>
      </node>
      <node id="216">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>string.h</label>
      </node>
      <node id="214">
        <label>parser.cpp</label>
        <link refid="parser.cpp"/>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>vector</label>
      </node>
      <node id="215">
        <label>parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>program.h</label>
        <link refid="program_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>sstream</label>
      </node>
      <node id="224">
        <label>time.h</label>
      </node>
      <node id="222">
        <label>math.h</label>
      </node>
      <node id="226">
        <label>iostream</label>
      </node>
      <node id="231">
        <label>algorithm</label>
      </node>
      <node id="219">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parser_8h" kindref="compound">parser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="class_data_parser_1adde3fdb08b6d298dac0bdf59b94d77c9" kindref="member">DataParser::DataParser</ref>()<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>dim<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>points_source<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>discr<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>steps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>sample<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>0.0;<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>max_iter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>eps<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>reading_state<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>изначально<sp/>предолагается,<sp/>что<sp/>данные<sp/>из<sp/>конфигурационного<sp/>файла<sp/>не<sp/>считались<sp/>корректно</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>на<sp/>данный<sp/>момент<sp/>они<sp/>не<sp/>считались<sp/>совсем</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_point_operations_1a97def43827da6fe4ad1004015f62f7fb" kindref="member">PointOperations::ZeroizePoint</ref>(start_point);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DataParser::IsParseData()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>launch_params<sp/>=<sp/><ref refid="parser_8h_1ae091d6c1ad52268e9cde107b657e1dcd" kindref="member">configfile</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="parser_8h_1ad51ffbe3227a9a74e19ff2c710679216" kindref="member">readsection</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="class_program_operations_1a7d9d871067d78908033c6d538d1cd1e4" kindref="member">ProgramOperations::RunPythonScript</ref>(<ref refid="parser_8h_1aa825cd902da0aaeee91190596ab324b7" kindref="member">pyscriptname</ref>,<sp/>launch_params);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataParser::ReadData(FILE<sp/>*aux_input_file)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aux_input_file<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>считывание<sp/>данных<sp/>и<sp/>проверка<sp/>правильности<sp/>считанных<sp/>значений<sp/>относительно<sp/>ограничений<sp/>задачи</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;dim);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dim<sp/>&lt;<sp/>1<sp/>||<sp/>dim<sp/>&gt;<sp/><ref refid="arithmetic_8h_1abdb68df7b02fded293d9a021b5d4b98b" kindref="member">MAX_DIM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>&apos;dim&apos;<sp/>is<sp/>outside<sp/>the<sp/>valid<sp/>interval!<sp/>Please<sp/>reduce<sp/>it...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/>&amp;ch);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>points_src[<ref refid="arithmetic_8h_1a21afaf2dcbf3be6bc362d358ab3378d9" kindref="member">MAX_ARRAY_SIZE</ref>];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(points_src,<sp/><ref refid="arithmetic_8h_1a21afaf2dcbf3be6bc362d358ab3378d9" kindref="member">MAX_ARRAY_SIZE</ref>,<sp/>aux_input_file);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>points_source<sp/>=<sp/><ref refid="class_types_change_1a3b3b728634baf3e6192824b5f1221cc5" kindref="member">TypesChange::CharArrayToString</ref>(points_src);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points_source<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;GENERATE_GRID&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>points_source<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;GENERATE_RANDOM&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>points_source<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;FROM_FILE&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>&apos;points_source&apos;<sp/>don&apos;t<sp/>have<sp/>available<sp/>value!<sp/>Please<sp/>change<sp/>it...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;d);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>&apos;d&apos;<sp/>can<sp/>not<sp/>be<sp/>negative!<sp/>Please<sp/>reduce<sp/>it...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;alpha);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>&lt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>&apos;alpha&apos;<sp/>can<sp/>not<sp/>be<sp/>non-negative!<sp/>Please<sp/>reduce<sp/>it...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;beta);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beta<sp/>&lt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>&apos;beta&apos;<sp/>can<sp/>not<sp/>be<sp/>non-negative!<sp/>Please<sp/>reduce<sp/>it...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha-beta-1.0<sp/>&lt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameters<sp/>&apos;alpha&apos;<sp/>&amp;<sp/>&apos;beta&apos;<sp/>are<sp/>not<sp/>satisfy<sp/>alpha-beta-1<sp/>&lt;=<sp/>0!<sp/>Please<sp/>reduce<sp/>them...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>&lt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>&apos;h&apos;<sp/>can<sp/>not<sp/>be<sp/>non-negative!<sp/>Please<sp/>reduce<sp/>it...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;max_iter);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_iter<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>&apos;max_iter&apos;<sp/>can<sp/>not<sp/>be<sp/>negative!<sp/>Please<sp/>reduce<sp/>it...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;eps);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eps<sp/>&lt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>&apos;eps&apos;<sp/>can<sp/>not<sp/>be<sp/>negative!<sp/>Please<sp/>reduce<sp/>it...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>считывание<sp/>дополнительных<sp/>параметров<sp/>в<sp/>зависимости<sp/>от<sp/>способа<sp/>получения<sp/>начальных<sp/>точек</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points_source<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;FROM_FILE&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;discr);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;steps);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(steps<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>&apos;steps&apos;<sp/>can<sp/>not<sp/>be<sp/>negative!<sp/>Please<sp/>reduce<sp/>it...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(points_source<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;GENERATE_RANDOM&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;sample);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>dim;<sp/>i++)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(aux_input_file,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;start_point[i]);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>reading_state<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_data_parser_1ae80dfe8258521c73d2dab00b1f1f74aa" kindref="member">DataParser::PullData</ref>()<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsParseData())<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*aux_input_file<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;in.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rt&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>вспомогательный<sp/>файл,<sp/>с<sp/>которого<sp/>будет<sp/>считываться<sp/>информация.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Этот<sp/>файл<sp/>создается<sp/>в<sp/>результате<sp/>работы<sp/>питоновского<sp/>скрипта</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ReadData(aux_input_file);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(aux_input_file);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;in.txt&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>удаление<sp/>вспомогательного<sp/>файла</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="class_data_parser_1a3814c58e35d81db3d7a1d5b96041efd5" kindref="member">DataParser::~DataParser</ref>()<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_Glyzin/Search cycles for maps/RelaxationOscillations/parser.cpp"/>
  </compounddef>
</doxygen>
